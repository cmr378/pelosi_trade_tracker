# Pelosi Trade Tracker

The **Pelosi Trade Tracker** is a Python-based tool designed to monitor, download, and parse financial disclosures and transactions associated with members of Congress, specifically focusing on Nancy Pelosi's reported stock trades. This project provides insight into potential stock movements by extracting trade data from disclosures and analyzing key transaction details.

---

## Features

1. **Automated File Download**
   - Downloads the latest financial disclosures zip files from the House of Representatives' public disclosure website.
   - Extracts text files from the downloaded archives while removing unnecessary XML files.
   
2. **Data Extraction**
   - Extracts detailed trade data, including:
     - **Ticker symbols**
     - **Transaction type** (e.g., Purchase or Sale)
     - **Transaction dates**
     - **Amount involved**
     - **Call options purchased** (quantity and strike price)
     - **Shares purchased** (if applicable).

3. **Continuous Monitoring**
   - Periodically checks for updates on financial disclosure files using the `Last-Modified` header.
   - Ensures that only new or updated files are processed.

4. **PDF Parsing**
   - Downloads and parses associated PDF documents for individual trade transactions.
   - Extracts additional transaction descriptions, such as call options details or shares purchased.

5. **JSON Storage**
   - Saves extracted data into structured JSON files for easier retrieval and further analysis.

---

## Project Structure

```
.
├── public_disclosures
│   ├── [Extracted text files and their metadata]
├── trades
│   ├── pelosi_trades.json
├── pdfs
│   ├── [Downloaded and parsed PDFs]
├── pelosi_trade_tracker.py
├── PDFHandler.py
├── README.md
```

### Key Files
- **`pelosi_trade_tracker.py`**: Main script to monitor, download, and process disclosure files.
- **`PDFHandler.py`**: Handles downloading and parsing of individual transaction-related PDFs.
- **`README.md`**: Project documentation.
- **`pelosi_trades.json`**: Outputs structured JSON with extracted trade data.

---

## Setup and Installation

### Prerequisites
- Python 3.8+
- pip (Python package manager)

### Install Required Libraries
Run the following command to install required Python libraries:
```bash
pip install -r requirements.txt
```

### Required Libraries
- `requests`: For downloading files.
- `pdfplumber`: For parsing PDF content.
- `re`: For extracting specific patterns from text.
- `json`: For saving and loading structured data.

---

## Usage

1. **Run the Main Script**:
   ```bash
   python pelosi_trade_tracker.py
   ```

2. **Process Overview**:
   - The script automatically checks the public disclosures website for updates.
   - Downloads the latest zip files and extracts relevant trade data.
   - Parses PDFs for detailed descriptions.
   - Outputs structured data to `pelosi_trades.json`.

3. **JSON Output**:
   The JSON file contains fields such as:
   - `ticker`: Stock ticker symbol.
   - `transaction_type`: Purchase or Sale.
   - `transaction_date`: Date of the transaction.
   - `notification_date`: Date the transaction was filed.
   - `amount`: Transaction amount.
   - `call_options`: Number of call options purchased (if applicable).
   - `strike_price`: Strike price of call options (if applicable).
   - `shares_purchased`: Number of shares purchased (if applicable).

---

## Contributions

Contributions are welcome! Feel free to fork the repository and submit a pull request. For major changes, please open an issue to discuss your proposed changes.

---

## License
This project is licensed under the [MIT License](LICENSE).

---

## Acknowledgements
- **House of Representatives Financial Disclosure Portal** for providing public access to the disclosures.
- Python libraries like `pdfplumber` and `requests` for facilitating seamless PDF parsing and file handling.

---

## Future Enhancements
- Add visualization of trade data.
- Enable notifications for significant trades.
- Expand to monitor additional members of Congress.

---

## Disclaimer
This tool is intended for educational and informational purposes only. It relies on publicly available data and is not intended to provide financial advice.

